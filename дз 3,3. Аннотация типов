from typing import List, Any

def function_name(
    search: str,
    status: bool,
    *args: Any,
    **kwargs: dict
) -> Any:
    """
    Обрабатывает переданные аргументы в зависимости от параметров search и status.

    Parameters:
    search (str): Определяет режим обработки. Может быть "args" или "kwargs".
    status (bool): Флаг, который влияет на логику обработки.
    *args (Any): Неограниченное число позиционных аргументов.
    **kwargs (dict): Неограниченное число именованных аргументов.

    Returns:
    list[int] | str: В случае search="args" и status=True возвращает список целых чисел.
                     В случае search="args" и status=False возвращает строку.
                     В случае search="kwargs" возвращает строку с ключами и значениями.
    Raises:
    ValueError: Если значение search не "args" или "kwargs".
    """

    result: List[int] = []
    result_2: str = ""

    if search == "args":
        if status:
            for i in args:
                if isinstance(i, int):
                    result.append(i)
            return result
        else:
            for i in args:
                result_2 += f"{i}"
            return result_2
    elif search == "kwargs":
        for k, v in kwargs.items():
            result_2 += ("Key: {}, Value: {}; ".format(k, v))
        return result_2
    else:
        raise ValueError("Error for search")
